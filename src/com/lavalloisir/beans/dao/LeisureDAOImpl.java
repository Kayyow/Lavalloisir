package com.lavalloisir.beans.dao;

import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.Statement;

import com.lavalloisir.beans.business.Category;
import com.lavalloisir.beans.business.Leisure;

public class LeisureDAOImpl implements LeisureDAO {
	
	private DAOFactory daoFactory;
	
	LeisureDAOImpl (DAOFactory daoFactory) {
		this.daoFactory = daoFactory;
	}
	
	public LeisureDAOImpl() {
	}

	private static final String SQL_SELECT_BY_NAME = "SELECT"
			+ "Id, Nom, Num, Rue, CodePostale, Ville, Description, Telephone, Email,Id_Categorie"
			+ "FROM Loisir WHERE Nom = ? ";
	
	// Implémentation de la méthode trouver() définie dans l'interface LeisureDAO
    @Override
    public Leisure find (String name) throws DAOException {
        Connection cnct = null;
        PreparedStatement preparedStmt = null;
        ResultSet rs = null;
        Leisure leisure = null;
        
        try {
        	cnct = daoFactory.getConnection();
        	preparedStmt = DAOUtil.initPreparedStatement(cnct, SQL_SELECT_BY_NAME, false, name);
        	rs = preparedStmt.executeQuery();
        	
        	// Parcours de la ligne de donnée de l'éventuel ResultSet retourné
        	if (rs.next()) {
        		leisure = map(rs);
        	}
        } catch (SQLException e) {
        	throw new DAOException(e);
        } finally {
        	DAOUtil.silentsClosing(rs, preparedStmt, cnct);
        }
        return leisure;
    }
    
    private static final String SQL_SELECT_BY_ID = "SELECT"
			+ "Id, Nom, Num, Rue, CodePostale, Ville, Description, Telephone, Email, Id_Categorie"
			+ "FROM Loisir WHERE Id = ? ";
	
	// Implémentation de la méthode trouver() définie dans l'interface LeisureDAO
    @Override
    public Leisure findById (long id) throws DAOException {
        Connection cnct = null;
        PreparedStatement preparedStmt = null;
        ResultSet rs = null;
        Leisure leisure = null;
        
        try {
        	cnct = daoFactory.getConnection();
        	preparedStmt = DAOUtil.initPreparedStatement(cnct, SQL_SELECT_BY_ID, false, id);
        	rs = preparedStmt.executeQuery();
        	
        	// Parcours de la ligne de donnée de l'éventuel ResultSet retourné
        	if (rs.next()) {
        		leisure = map(rs);
        	}
        } catch (SQLException e) {
        	throw new DAOException(e);
        } finally {
        	DAOUtil.silentsClosing(rs, preparedStmt, cnct);
        }
        return leisure;
    }
	
    private static final String SQL_INSERT = "INSERT INTO loisir "
    		+ "(Nom, Num, Rue, CodePostale, Ville, Description, Telephone, Email, Id_categorie) "
    		+ "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
    
	// Implémentation de la méthode creer() définie dans l'interface LeisureDao
    @Override
    public void create (Leisure leisure) throws IllegalArgumentException, DAOException {
    	Connection cnct = null;
    	PreparedStatement preparedStmt = null;
    	ResultSet autoGeneratedValues = null;
    	
    	try {
    		// Récupération d'une connexion depuis la Factory
    		cnct = daoFactory.getConnection();
    		preparedStmt = DAOUtil.initPreparedStatement(cnct, SQL_INSERT, true,
    				leisure.getName(), leisure.getNumber(), leisure.getStreet(), leisure.getZipCode(),
    				leisure.getCity(), leisure.getDescription(), leisure.getPhone(), leisure.getEmail(),
    				leisure.getCategory());
    		int status = preparedStmt.executeUpdate();
    		
    		// Analyse du statut retourné par la requête d'insertion
    		if (status == 0) {
    			throw new DAOException("Echec de la création du loisir, aucune ligne ajoutée à la table.");
    		}
    		
    		autoGeneratedValues = preparedStmt.getGeneratedKeys();
    		if (autoGeneratedValues.next()) {

    			leisure.setId(autoGeneratedValues.getLong(1));
    		} else {
    			throw new DAOException("Echec de la création de loisir en base, aucun ID auto-généré retourné.");
    		}
    	} catch (SQLException e) {
    		throw new DAOException(e);
    	} finally {
    		DAOUtil.silentsClosing(autoGeneratedValues, preparedStmt, cnct);
    	}
    }
    
    
	private static Leisure map (ResultSet rs) throws SQLException {
		Leisure leisure = new Leisure();
		leisure.setId(rs.getLong("Id"));
		leisure.setName(rs.getString("Nom"));
		leisure.setNumber(rs.getInt("Num"));
		leisure.setStreet(rs.getString("Rue"));
		leisure.setZipCode(rs.getInt("CodePostale"));
		leisure.setCity(rs.getString("Ville"));
		leisure.setDescription(rs.getString("Description"));
		leisure.setPhone(rs.getString("Telephone"));
		leisure.setEmail(rs.getString("Email"));
		
		long idCategory = rs.getLong("Id_Categorie");
		CategoryDAOImpl categoryDAO = new CategoryDAOImpl();
		Category category = categoryDAO.find(idCategory);
		leisure.setCategory(category);
		
		return leisure;
	}
	
	
	////////////////////////////////////////////////////////////
	////////// A MODIFIER/ADAPTER. (Fait par Julien) ///////////
	////////////////////////////////////////////////////////////
	public static Leisure find(Connection cnx, String Nom){
		
		Statement stmt = null; 
		Leisure leisure = null; 
		
		try {
			stmt = (Statement)cnx.createStatement();
			
			ResultSet result = stmt.executeQuery("SELECT Nom, Num, Rue, CodePostale, Ville, Description, Telephone, Email, Id_Categorie FROM loisir WHERE Nom ='" + Nom + "'");
			
			if(result.next()){
				leisure = new Leisure();
				leisure.setName(result.getString("Nom"));
				leisure.setNumber(result.getInt("Num"));
				leisure.setStreet(result.getString("Rue"));
				leisure.setZipCode(result.getInt("CodePostale"));
				leisure.setCity(result.getString("Ville"));
				leisure.setDescription(result.getString("Description"));
				leisure.setPhone(result.getString("Telephone"));
				leisure.setEmail(result.getString("Email"));
				
				long idCategory = result.getLong("Id_Categorie");
				Category category = CategoryDAOImpl.find(cnx, idCategory);
				leisure.setCategory(category);
			}
			
		}catch(Exception ex){
			
		}finally {
			if(stmt != null){
                try{
                    stmt.close();
                }catch(Exception ex){
                    ex.printStackTrace();
                }
            }
		}

		return leisure;
	}
	
	public static void create (Connection cnx, Leisure leisure){
		
		Leisure l = find(cnx, leisure.getName());

		Statement stmt = null;
		
		if( l == null){
			
			try {
				stmt = (Statement)cnx.createStatement();
			
				stmt.executeUpdate("INSERT INTO loisir (Nom, Num, Rue, CodePostale, Ville, Description, Telephone,Email, Id_Categorie) "
						+ "VALUES('"+ leisure.getName()
						+ "','" + leisure.getNumber() 
						+ "','" + leisure.getStreet()
						+ "','" + leisure.getZipCode()
						+ "','" + leisure.getCity()
						+ "','" + leisure.getDescription()
						+ "','" + leisure.getPhone()
						+ "','" + leisure.getEmail()
						+ "','" + leisure.getCategory().getId()
						+ "')");

			}catch(Exception ex){
				
			}finally {
				if(stmt != null){
					try{
						stmt.close();
					} catch (Exception Ex){
					}
				}
			}
		}
	}

}
